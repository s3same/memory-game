{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","_ref","card","handleChoice","flipped","disabled","_jsx","className","children","_jsxs","src","alt","onClick","cardImages","matched","App","_useState","useState","_useState2","_slicedToArray","cards","setCards","_useState3","_useState4","turns","setTurns","_useState5","_useState6","choiceOne","setChoiceOne","_useState7","_useState8","choiceTwo","setChoiceTwo","_useState9","_useState10","setDisabled","shuffleCards","shuffledCards","a","i","length","j","Math","floor","random","durstenfeldShuffle","concat","map","_objectSpread","id","console","log","useEffect","prevCards","resetTurn","setTimeout","prevTurns","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.276af3ed.chunk.js","sourcesContent":["import './SingleCard.css';\n\nexport default function SingleCard({ card, handleChoice, flipped, disabled }) {\n  const handleClick = () => {\n    if (!disabled) {\n      handleChoice(card);\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className={flipped ? \"flipped\" : \"\"}>\n        <img className=\"front\" src={card.src} alt=\"card front\" />\n        <img className=\"back\" src=\"/img/cover.png\" onClick={handleClick} alt=\"cover\" />\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\n\nconst cardImages = [\n  { src: '/img/helmet.png', matched: false },\n  { src: '/img/potion.png', matched: false },\n  { src: '/img/ring.png', matched: false },\n  { src: '/img/scroll.png', matched: false },\n  { src: '/img/shield.png', matched: false },\n  { src: '/img/sword.png', matched: false },\n];\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  // Shuffle cards for new game\n  const durstenfeldShuffle = (a) => {\n    for (let i = a.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1)); // 0 <= j <= i\n      [a[i], a[j]] = [a[j], a[i]];\n      // let temp = a[i];\n      // a[i] = a[j];\n      // a[j] = temp;\n    }\n    return a;\n  };\n\n  const shuffleCards = () => {\n    // const shuffledCards = [...cardImages, ...cardImages]\n    //   .sort(() => Math.random() - 0.5)\n    //   .map(card => ({ ...card, id: Math.random() }));\n\n    let shuffledCards = durstenfeldShuffle([...cardImages, ...cardImages]).map((card) => ({\n      ...card,\n      id: Math.random(),\n    }));\n\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  // Handle a choice\n  const handleChoice = (card) => {\n    console.log(card);\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // Compare 2 selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards((prevCards) => {\n          return prevCards.map((card) => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  // Reset choices & increase turn\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns((prevTurns) => prevTurns + 1);\n    setDisabled(false);\n  };\n\n  // Start new game automatically\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n\n  return (\n    <div className='App'>\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n      <div className='card-grid'>\n        {cards.map((card) => (\n          <SingleCard\n            key={card.id}\n            card={card}\n            handleChoice={handleChoice}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}